<Activity mc:Ignorable="sap sap2010" x:Class="UpdateLicenseTracking" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_LicenseTracking" Type="InArgument(x:String)" />
    <x:Property Name="in_YearlyAccountActivityReport" Type="InArgument(x:String)" />
    <x:Property Name="in_WeeklyAccountActivityReport" Type="InArgument(x:String)" />
    <x:Property Name="in_BoxReport" Type="InArgument(x:String)" />
    <x:Property Name="dt_Licenses" Type="InArgument(sd:DataTable)" />
    <x:Property Name="dt_ePenCumulative" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_TotalUserEntitlements" Type="InArgument(x:String)" />
    <x:Property Name="in_BilledAgenciesReport" Type="InArgument(x:String)" />
    <x:Property Name="BoxUsers" Type="InArgument(x:String)" />
    <x:Property Name="in_CompanyMappings" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_AgenciesFile" Type="InArgument(x:String)" />
  </x:Members>
  <this:UpdateLicenseTracking.in_YearlyAccountActivityReport>
    <InArgument x:TypeArguments="x:String" />
  </this:UpdateLicenseTracking.in_YearlyAccountActivityReport>
  <this:UpdateLicenseTracking.in_WeeklyAccountActivityReport>
    <InArgument x:TypeArguments="x:String" />
  </this:UpdateLicenseTracking.in_WeeklyAccountActivityReport>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>993,3682</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>UpdateLicenseTracking_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Threading.Tasks</x:String>
      <x:String>System.Windows.Media</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Callout.Activity</x:String>
      <x:String>UiPath.ContactCenter.Shared</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel.Helpers</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="61">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Parallel</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>UiPath.Callout.Activity</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="UpdateLicenseTracking" sap:VirtualizedContainerService.HintSize="594,3617" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="RowNumber" />
      <Variable x:TypeArguments="x:String" Name="TotalsRange" />
      <Variable x:TypeArguments="sd1:Color" Name="TotalsColor" />
      <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="ActiveUsersRow" />
      <Variable x:TypeArguments="x:String" Name="LastColumnLetter" />
      <Variable x:TypeArguments="x:String" Default="License Usage" Name="LicenseUsageWorksheet" />
      <Variable x:TypeArguments="x:Int32" Name="BoxActiveUsers" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_BoxReport" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_YearlyAccountActivityReport" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="LicenseTracking.xlsx" sap:VirtualizedContainerService.HintSize="552,3525" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="0" WorkbookPath="[in_LicenseTracking]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="518,3416" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Preformat Yearly Account Activity Report" sap:VirtualizedContainerService.HintSize="476,445" sap2010:WorkflowViewState.IdRef="Sequence_37">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ReadCsvFile DataTable="[dt_YearlyAccountActivityReport]" Delimitator="Comma" DisplayName="Read CSV" FilePath="[in_YearlyAccountActivityReport]" sap:VirtualizedContainerService.HintSize="434,153" sap2010:WorkflowViewState.IdRef="ReadCsvFile_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ReadCsvFile>
              <ui:FilterDataTable DataTable="[dt_YearlyAccountActivityReport]" DisplayName="Remove Carahsoft and Last Envelope Sent (Time)" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="434,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_7" OutputDataTable="[dt_YearlyAccountActivityReport]" SelectColumnsMode="Remove">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">["Account Name"]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:String">["Carahsoft"]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                    <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">["Account Name"]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:String">["Fauquier"]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <InArgument x:TypeArguments="x:String">["Last Envelope Sent (Time)"]</InArgument>
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FilterDataTable>
            </Sequence>
            <Sequence DisplayName="ServiceNow" sap:VirtualizedContainerService.HintSize="476,770" sap2010:WorkflowViewState.IdRef="Sequence_25">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Default="ePen cumulative purchases FY23" Name="ePenCumulativePurchasesWorksheet" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="ePen Cumulative Purchases" sap:VirtualizedContainerService.HintSize="376,678" sap2010:WorkflowViewState.IdRef="Sequence_31">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dt_ActualUsedTransactions" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log ePen Cumulative Purchases and Transaction Count Update" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Updating LicenseTracking.xlsx with ePen Cumulative Purchases and Transaction Count...&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <ui:BuildDataTable DataTable="[dt_ActualUsedTransactions]" DisplayName="Build Data Table - Actual Used Transactions" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Actual_x0020_Used_x0020_Transactions&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                <ui:FilterDataTable DataTable="[dt_ePenCumulative]" DisplayName="Remove VSDB - 0218" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="FilterDataTable_10" OutputDataTable="[dt_ePenCumulative]" SelectColumnsMode="Keep">
                  <ui:FilterDataTable.Filters>
                    <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                      <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                        <ui:FilterOperationArgument.Column>
                          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                        </ui:FilterOperationArgument.Column>
                        <ui:FilterOperationArgument.Operand>
                          <InArgument x:TypeArguments="x:String">["VSDB - 0218"]</InArgument>
                        </ui:FilterOperationArgument.Operand>
                      </ui:FilterOperationArgument>
                    </scg:List>
                  </ui:FilterDataTable.Filters>
                  <ui:FilterDataTable.SelectColumns>
                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                      <x:Null />
                    </scg:List>
                  </ui:FilterDataTable.SelectColumns>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:FilterDataTable>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_ePenCumulative]" DisplayName="For Each Company" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Company" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,2818" sap2010:WorkflowViewState.IdRef="Sequence_38">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataTable" Name="dt_MappedCompany" />
                          <Variable x:TypeArguments="sd:DataTable" Name="dt_ActualUsedTransaction" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:FilterDataTable DataTable="[in_CompanyMappings]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="484,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_8" OutputDataTable="[dt_MappedCompany]" SelectColumnsMode="Keep">
                          <ui:FilterDataTable.Filters>
                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                <ui:FilterOperationArgument.Column>
                                  <InArgument x:TypeArguments="x:String">["Code"]</InArgument>
                                </ui:FilterOperationArgument.Column>
                                <ui:FilterOperationArgument.Operand>
                                  <InArgument x:TypeArguments="x:String">[Company("Company").ToString]</InArgument>
                                </ui:FilterOperationArgument.Operand>
                              </ui:FilterOperationArgument>
                            </scg:List>
                          </ui:FilterDataTable.Filters>
                          <ui:FilterDataTable.SelectColumns>
                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                              <x:Null />
                            </scg:List>
                          </ui:FilterDataTable.SelectColumns>
                        </ui:FilterDataTable>
                        <If Condition="[dt_MappedCompany.Rows.Count = 0]" sap:VirtualizedContainerService.HintSize="484,748" sap2010:WorkflowViewState.IdRef="If_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="418,562" sap2010:WorkflowViewState.IdRef="Sequence_41">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="376,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Warn" Message="[&quot;Mapping error with &quot; + COMPANY(&quot;Company&quot;).ToString]" />
                              <Sequence sap:VirtualizedContainerService.HintSize="376,339" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;0&quot;}]" DataTable="[dt_ActualUsedTransactions]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="AddDataRow_6" />
                                <ui:Continue sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Continue_2" />
                              </Sequence>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_42">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <If Condition="[dt_MappedCompany(0)(&quot;Code&quot;).toString.Contains(&quot;Always 0&quot;)]" sap:VirtualizedContainerService.HintSize="484,525" sap2010:WorkflowViewState.IdRef="If_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,339" sap2010:WorkflowViewState.IdRef="Sequence_39">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;0&quot;}]" DataTable="[dt_ActualUsedTransactions]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="AddDataRow_5" />
                              <ui:Continue sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Continue_1" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_40">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <ui:FilterDataTable DataTable="[dt_YearlyAccountActivityReport]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="484,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_9" OutputDataTable="[dt_ActualUsedTransaction]" SelectColumnsMode="Keep">
                          <ui:FilterDataTable.Filters>
                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                <ui:FilterOperationArgument.Column>
                                  <InArgument x:TypeArguments="x:String">["Account Name"]</InArgument>
                                </ui:FilterOperationArgument.Column>
                                <ui:FilterOperationArgument.Operand>
                                  <InArgument x:TypeArguments="x:String">[dt_MappedCompany(0)("Company").ToString]</InArgument>
                                </ui:FilterOperationArgument.Operand>
                              </ui:FilterOperationArgument>
                            </scg:List>
                          </ui:FilterDataTable.Filters>
                          <ui:FilterDataTable.SelectColumns>
                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                              <x:Null />
                            </scg:List>
                          </ui:FilterDataTable.SelectColumns>
                        </ui:FilterDataTable>
                        <If Condition="[dt_ActualUsedTransaction.Rows.Count = 0]" sap:VirtualizedContainerService.HintSize="484,748" sap2010:WorkflowViewState.IdRef="If_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="418,562" sap2010:WorkflowViewState.IdRef="Sequence_45">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="376,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Warn" Message="[&quot;Mapping error with &quot; + COMPANY(&quot;Company&quot;).ToString]" />
                              <Sequence sap:VirtualizedContainerService.HintSize="376,339" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;0&quot;}]" DataTable="[dt_ActualUsedTransactions]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="AddDataRow_7" />
                                <ui:Continue sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Continue_3" />
                              </Sequence>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_46">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{dt_ActualUsedTransaction(0)(&quot;Envelopes Sent&quot;).ToString}]" DataTable="[dt_ActualUsedTransactions]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="484,185" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_ActualUsedTransactions]" DisplayName="Write Actual Used Transactions" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="[ePenCumulativePurchasesWorksheet]" StartingCell="D2" />
                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_ePenCumulative]" DisplayName="Write ePen Cumulative and Transaction Data" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[ePenCumulativePurchasesWorksheet]" StartingCell="A2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelWriteRange>
              </Sequence>
            </Sequence>
            <Sequence DisplayName="DocuSign" sap:VirtualizedContainerService.HintSize="476,66" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Update the License Usage Worksheet" sap:VirtualizedContainerService.HintSize="476,2865" sap2010:WorkflowViewState.IdRef="Sequence_28">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dt_WeeklyAccountActivityReport" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dt_ePenWeeklyData" />
                  <Variable x:TypeArguments="s:DateTime" Name="LastSunday" />
                  <Variable x:TypeArguments="sd:DataRow" Name="WeeklyTotalsRow" />
                  <Variable x:TypeArguments="x:String" Default="ePen weekly data" Name="ePenWeeklyDataWorksheet" />
                  <Variable x:TypeArguments="x:String" Default="in" Name="AccountActivityReportsWorksheet" />
                  <Variable x:TypeArguments="x:String" Default="ePen cumulative usage FY23" Name="ePenCumulativeUsageWorksheet" />
                  <Variable x:TypeArguments="x:String" Default="ePen cumulative purchases FY23" Name="ePenCumulativePurchasesWorksheet" />
                  <Variable x:TypeArguments="x:Double" Name="ePenTransactions" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dt_RangeToClear" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Weekly Account Activity Report Updates" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Updating LicenseTracking.xlsx with Weekly Account Activity Report...&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <ui:ReadCsvFile DataTable="[dt_WeeklyAccountActivityReport]" Delimitator="Comma" DisplayName="Read CSV" FilePath="[in_WeeklyAccountActivityReport]" sap:VirtualizedContainerService.HintSize="434,153" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" />
                <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_ePenWeeklyData]" DisplayName="Read ePen Weekly Data License Tracking" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" Range="A1" SheetName="[ePenWeeklyDataWorksheet]" />
                <ui:FilterDataTable DataTable="[dt_WeeklyAccountActivityReport]" DisplayName="Remove Carahsoft and Last Envelope Sent (Time)" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_WeeklyAccountActivityReport]" SelectColumnsMode="Remove">
                  <ui:FilterDataTable.Filters>
                    <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                      <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                        <ui:FilterOperationArgument.Column>
                          <InArgument x:TypeArguments="x:String">["Account Name"]</InArgument>
                        </ui:FilterOperationArgument.Column>
                        <ui:FilterOperationArgument.Operand>
                          <InArgument x:TypeArguments="x:String">["Carahsoft"]</InArgument>
                        </ui:FilterOperationArgument.Operand>
                      </ui:FilterOperationArgument>
                    </scg:List>
                  </ui:FilterDataTable.Filters>
                  <ui:FilterDataTable.SelectColumns>
                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                      <InArgument x:TypeArguments="x:String">["Last Envelope Sent (Time)"]</InArgument>
                    </scg:List>
                  </ui:FilterDataTable.SelectColumns>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:FilterDataTable>
                <ui:ExcelGetCellColor Cell="[&quot;A&quot;+(dt_ePenWeeklyData.Rows.Count+1).ToString]" Color="[TotalsColor]" DisplayName="Get the Totals Format Color" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelGetCellColor_2" SheetName="[ePenWeeklyDataWorksheet]" />
                <Assign DisplayName="Determine Last Sunday Date" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[LastSunday]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[DateTime.Today.AddDays(-(Weekday(DateTime.Today)-1))]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Create a New Totals Datarow" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataRow">[WeeklyTotalsRow]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataRow">[dt_WeeklyAccountActivityReport.NewRow]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:MultipleAssign DisplayName="Add Data to the New Totals Row" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[WeeklyTotalsRow(0)]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">["Weekly Totals for " + LastSunday.ToString("MM/dd/yyyy")]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[WeeklyTotalsRow(1)]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[WeeklyTotalsRow(2)]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[WeeklyTotalsRow(3)]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[dt_WeeklyAccountActivityReport.AsEnumerable.Sum(Function(r) cdbl(r.Field(Of string)("Users")))]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[WeeklyTotalsRow(4)]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[dt_WeeklyAccountActivityReport.AsEnumerable.Sum(Function(r) cdbl(r.Field(Of string)("Envelopes Sent")))]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[WeeklyTotalsRow(5)]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[dt_WeeklyAccountActivityReport.AsEnumerable.Sum(Function(r) cdbl(r.Field(Of string)("Envelopes Completed")))]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[WeeklyTotalsRow(6)]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[dt_WeeklyAccountActivityReport.AsEnumerable.Sum(Function(r) cdbl(r.Field(Of string)("Templates Created")))]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MultipleAssign>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[WeeklyTotalsRow.ItemArray]" DataTable="[dt_WeeklyAccountActivityReport]" DisplayName="Add the New Data Row to the End" sap:VirtualizedContainerService.HintSize="434,185" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:AddDataRow>
                <ui:ExcelAppendRange DataTable="[dt_WeeklyAccountActivityReport]" DisplayName="Add Weekly Account Activity Data and New Total Row" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_3" SheetName="[ePenWeeklyDataWorksheet]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelAppendRange>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_ePenWeeklyData]" DisplayName="Re-read to Determine Last Row" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" Range="A1" SheetName="[ePenWeeklyDataWorksheet]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadRange>
                <Assign DisplayName="Assign Last Row Number" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[RowNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[(dt_ePenWeeklyData.Rows.Count+1).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Create Variable to Hold Entire Row" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[TotalsRange]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[RowNumber.ToString+":"+RowNumber.ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelSelectRange DisplayName="Select the Entire Totals Row" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_2" Range="[TotalsRange]" SheetName="[ePenWeeklyDataWorksheet]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelSelectRange>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Bold the Row" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="b" KeyModifiers="Ctrl">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="17b3b70d-2a9e-4219-8dd4-2411c15ab79b">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:SendHotkey>
                <ui:ExcelSetRangeColor Color="[TotalsColor]" DisplayName="Set the Totals Row to the Correct Color" sap:VirtualizedContainerService.HintSize="434,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_3" Range="[TotalsRange]" SheetName="[ePenWeeklyDataWorksheet]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelSetRangeColor>
                <ui:ExcelReadRow DisplayName="Determine First Empty Column " sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelReadRow_1" Result="[ActiveUsersRow]" SheetName="[LicenseUsageWorksheet]" StartingCell="B25">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadRow>
                <Assign DisplayName="Determine the Column's Letter" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[LastColumnLetter]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+2)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelReadCell Cell="C30" DisplayName="Read ePen Transaction Count" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="[ePenCumulativePurchasesWorksheet]">
                  <ui:ExcelReadCell.Result>
                    <OutArgument x:TypeArguments="x:Double">[ePenTransactions]</OutArgument>
                  </ui:ExcelReadCell.Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadCell>
                <Sequence DisplayName="Update ePen (DocuSign) Section" sap:VirtualizedContainerService.HintSize="434,66" sap2010:WorkflowViewState.IdRef="Sequence_27">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,221" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_35">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelAutoFillRange DisplayName="Copy Date Over" FillRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;1:&quot;+LastColumnLetter+&quot;1&quot;]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_3" SheetName="License Usage" SourceRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;1&quot;]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ExcelAutoFillRange>
                      </Sequence>
                    </ui:CommentOut.Body>
                  </ui:CommentOut>
                  <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;1&quot;]" DisplayName="Add Date Header" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_33" SheetName="[LicenseUsageWorksheet]" Text="[DateTime.Now.ToString(&quot;MM/dd/yyyy&quot;)]" />
                  <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;25&quot;]" DisplayName="Write Active User Count" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="[LicenseUsageWorksheet]" Text="[WeeklyTotalsRow(3).ToString]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelWriteCell>
                  <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;26&quot;]" DisplayName="Write Envelopes Sent Count" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="[LicenseUsageWorksheet]" Text="[WeeklyTotalsRow(4).ToString]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelWriteCell>
                  <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;27&quot;]" DisplayName="Write Envelopes Completed Count" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="[LicenseUsageWorksheet]" Text="[WeeklyTotalsRow(5).ToString]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelWriteCell>
                  <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;28&quot;]" DisplayName="Write Templates Created Count" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="[LicenseUsageWorksheet]" Text="[WeeklyTotalsRow(6).ToString]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelWriteCell>
                  <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;29&quot;]" DisplayName="Write ePen Transaction Count" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="[LicenseUsageWorksheet]" Text="[ePenTransactions.ToString]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelWriteCell>
                  <ui:ExcelAutoFillRange DisplayName="Fill ePen Transaction Spent Formula" FillRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;30:&quot;+LastColumnLetter+&quot;30&quot;]" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_1" SheetName="License Usage" SourceRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;30&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelAutoFillRange>
                  <ui:ExcelAutoFillRange DisplayName="Fill Percent of Total Transactions Billed Formula" FillRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;31:&quot;+LastColumnLetter+&quot;31&quot;]" sap:VirtualizedContainerService.HintSize="436,51" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_2" SheetName="License Usage" SourceRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;31&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelAutoFillRange>
                </Sequence>
                <ui:ExcelReadRange AddHeaders="False" DataTable="[dt_RangeToClear]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" Range="A9" SheetName="[ePenCumulativeUsageWorksheet]" />
                <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_1" Range="[&quot;A9:H&quot;+(dt_RangeToClear.Rows.Count+8).ToString]" SheetName="[ePenCumulativeusageWorksheet]" ShiftCells="False" ShiftOption="ShiftUp" />
                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_YearlyAccountActivityReport]" DisplayName="Add the Yearly Activity Report Data to ePen Cumulative Usage Worksheet" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[ePenCumulativeUsageWorksheet]" StartingCell="A9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelWriteRange>
              </Sequence>
              <ui:LogMessage DisplayName="Log Updates Complete" sap:VirtualizedContainerService.HintSize="476,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Complete.&quot;]" />
            </Sequence>
            <Sequence DisplayName="Update Box Section in License Usage Worksheet" sap:VirtualizedContainerService.HintSize="476,66" sap2010:WorkflowViewState.IdRef="Sequence_33">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Double" Name="PurchasedLicenses" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="0" WorkbookPath="[in_BoxReport]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,270" sap2010:WorkflowViewState.IdRef="Sequence_32">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="BoxReportSheetName" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelGetWorkbookSheet DisplayName="Get Workbook Sheet" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheet_1" Index="0" Sheet="[BoxReportSheetName]" />
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_BoxReport]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_12" Range="A1" SheetName="[BoxReportSheetName]" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[BoxActiveUsers]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[dt_BoxReport.Rows.Count]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelReadCell Cell="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;33&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="[LicenseUsageWorksheet]">
                <ui:ExcelReadCell.Result>
                  <OutArgument x:TypeArguments="x:Double">[PurchasedLicenses]</OutArgument>
                </ui:ExcelReadCell.Result>
              </ui:ExcelReadCell>
              <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;33&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_28" SheetName="[LicenseUsageWorksheet]" Text="[PurchasedLicenses.ToString]" />
              <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;34&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_34" SheetName="[LicenseUsageWorksheet]" Text="[BoxUsers.ToString]" />
              <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;35&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_26" SheetName="[LicenseUsageWorksheet]" Text="[BoxActiveUsers.ToString]" />
              <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;36&quot;]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_27" SheetName="[LicenseUsageWorksheet]" Text="[in_TotalUserEntitlements]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteCell>
              <ui:ExcelAutoFillRange DisplayName="Fill Percent of Total Licenses Billed" FillRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;37:&quot;+LastColumnLetter+&quot;37&quot;]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_14" SheetName="License Usage" SourceRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;37&quot;]" />
            </Sequence>
            <Sequence DisplayName="Licenses" sap:VirtualizedContainerService.HintSize="476,66" sap2010:WorkflowViewState.IdRef="Sequence_29">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Default="UiPath" Name="OrchestratorLicensesWorksheet" />
                <Variable x:TypeArguments="s:DateTime" Name="LastMonday" />
                <Variable x:TypeArguments="sd:DataRow" Name="AssignedLicensesTotalRow" />
                <Variable x:TypeArguments="sd:DataTable" Name="dt_UiPath" />
                <Variable x:TypeArguments="x:String" Default="D:D" Name="RobotsAndServicesColumn" />
                <Variable x:TypeArguments="sd:DataTable" Name="dt_LicenseTotals" />
                <Variable x:TypeArguments="sd:DataTable" Name="dt_DeveloperLicenses" />
                <Variable x:TypeArguments="sd:DataTable" Name="dt_AttendedLicenses" />
                <Variable x:TypeArguments="sd:DataTable" Name="dt_UnattendedLicenses" />
                <Variable x:TypeArguments="sd:DataTable" Name="dt_BilledToAgencies" />
                <Variable x:TypeArguments="sd:DataTable" Name="dt_TestingLicenses" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Determine Billed to Agency Count" sap:VirtualizedContainerService.HintSize="431,66" sap2010:WorkflowViewState.IdRef="Sequence_34">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ReadCsvFile DataTable="[dt_BilledToAgencies]" Delimitator="Comma" DisplayName="Read CSV" FilePath="[in_BilledAgenciesReport]" sap:VirtualizedContainerService.HintSize="434,153" sap2010:WorkflowViewState.IdRef="ReadCsvFile_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ReadCsvFile>
                <ui:FilterDataTable DataTable="[dt_BilledToAgencies]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[dt_DeveloperLicenses]" SelectColumnsMode="Keep">
                  <ui:FilterDataTable.Filters>
                    <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                      <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                        <ui:FilterOperationArgument.Column>
                          <InArgument x:TypeArguments="x:String">["licensed_by"]</InArgument>
                        </ui:FilterOperationArgument.Column>
                        <ui:FilterOperationArgument.Operand>
                          <InArgument x:TypeArguments="x:String">["UiPath Studio - UiPath Studio Studio"]</InArgument>
                        </ui:FilterOperationArgument.Operand>
                      </ui:FilterOperationArgument>
                    </scg:List>
                  </ui:FilterDataTable.Filters>
                  <ui:FilterDataTable.SelectColumns>
                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                      <x:Null />
                    </scg:List>
                  </ui:FilterDataTable.SelectColumns>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:FilterDataTable>
                <ui:FilterDataTable DataTable="[dt_BilledToAgencies]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[dt_AttendedLicenses]" SelectColumnsMode="Keep">
                  <ui:FilterDataTable.Filters>
                    <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                      <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                        <ui:FilterOperationArgument.Column>
                          <InArgument x:TypeArguments="x:String">["licensed_by"]</InArgument>
                        </ui:FilterOperationArgument.Column>
                        <ui:FilterOperationArgument.Operand>
                          <InArgument x:TypeArguments="x:String">["UiPath Attended Robots - UiPath Attended Robots Attended Robots"]</InArgument>
                        </ui:FilterOperationArgument.Operand>
                      </ui:FilterOperationArgument>
                    </scg:List>
                  </ui:FilterDataTable.Filters>
                  <ui:FilterDataTable.SelectColumns>
                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                      <x:Null />
                    </scg:List>
                  </ui:FilterDataTable.SelectColumns>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:FilterDataTable>
                <ui:FilterDataTable DataTable="[dt_BilledToAgencies]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_5" OutputDataTable="[dt_UnattendedLicenses]" SelectColumnsMode="Keep">
                  <ui:FilterDataTable.Filters>
                    <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                      <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                        <ui:FilterOperationArgument.Column>
                          <InArgument x:TypeArguments="x:String">["licensed_by"]</InArgument>
                        </ui:FilterOperationArgument.Column>
                        <ui:FilterOperationArgument.Operand>
                          <InArgument x:TypeArguments="x:String">["UiPath Unattended Robots - UiPath Unattended Robots Unattended Robots"]</InArgument>
                        </ui:FilterOperationArgument.Operand>
                      </ui:FilterOperationArgument>
                    </scg:List>
                  </ui:FilterDataTable.Filters>
                  <ui:FilterDataTable.SelectColumns>
                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                      <x:Null />
                    </scg:List>
                  </ui:FilterDataTable.SelectColumns>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:FilterDataTable>
                <ui:FilterDataTable DataTable="[dt_BilledToAgencies]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_6" OutputDataTable="[dt_TestingLicenses]" SelectColumnsMode="Keep">
                  <ui:FilterDataTable.Filters>
                    <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                      <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                        <ui:FilterOperationArgument.Column>
                          <InArgument x:TypeArguments="x:String">["licensed_by"]</InArgument>
                        </ui:FilterOperationArgument.Column>
                        <ui:FilterOperationArgument.Operand>
                          <InArgument x:TypeArguments="x:String">["UiPath Non-Production Robots - UiPath Non-Production Robots Non-Production Robots"]</InArgument>
                        </ui:FilterOperationArgument.Operand>
                      </ui:FilterOperationArgument>
                    </scg:List>
                  </ui:FilterDataTable.Filters>
                  <ui:FilterDataTable.SelectColumns>
                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                      <x:Null />
                    </scg:List>
                  </ui:FilterDataTable.SelectColumns>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:FilterDataTable>
              </Sequence>
              <Assign sap:VirtualizedContainerService.HintSize="431,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[LastMonday]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[DateTime.Today.AddDays(-(Weekday(DateTime.Today)))]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="431,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                <Assign.To>
                  <OutArgument x:TypeArguments="sd:DataRow">[AssignedLicensesTotalRow]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sd:DataRow">[dt_Licenses.NewRow]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,379" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[AssignedLicensesTotalRow(0)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">["Assigned Licenses - " + DateTime.Now.ToString("yyyy-MM-dd")]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[AssignedLicensesTotalRow(1)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[dt_Licenses.AsEnumerable.Sum(Function(r) cdbl(r.Field(Of string)("Attended Named User")))]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[AssignedLicensesTotalRow(2)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[dt_Licenses.AsEnumerable.Sum(Function(r) cdbl(r.Field(Of string)("RPA Developer - Named User")))]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[AssignedLicensesTotalRow(3)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[AssignedLicensesTotalRow(4)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[dt_Licenses.AsEnumerable.Sum(Function(r) cdbl(r.Field(Of string)("Unattended Robot")))]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[AssignedLicensesTotalRow(5)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[dt_Licenses.AsEnumerable.Sum(Function(r) cdbl(r.Field(Of string)("AI Robot")))]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[AssignedLicensesTotalRow(6)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[dt_Licenses.AsEnumerable.Sum(Function(r) cdbl(r.Field(Of string)("Data Service Units")))]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[AssignedLicensesTotalRow(7)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[dt_Licenses.AsEnumerable.Sum(Function(r) cdbl(r.Field(Of string)("Computer Vision")))]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[AssignedLicensesTotalRow(8)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[dt_Licenses.AsEnumerable.Sum(Function(r) cdbl(r.Field(Of string)("Testing Robot")))]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[AssignedLicensesTotalRow(9)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[dt_Licenses.AsEnumerable.Sum(Function(r) cdbl(r.Field(Of string)("GPU")))]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[AssignedLicensesTotalRow.ItemArray]" DataTable="[dt_Licenses]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="431,185" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
              <ui:ExcelAppendRange DataTable="[dt_Licenses]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="431,87" sap2010:WorkflowViewState.IdRef="ExcelAppendRange_4" SheetName="[OrchestratorLicensesWorksheet]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelAppendRange>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_UiPath]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="431,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_10" Range="A1" SheetName="[OrchestratorLicensesWorksheet]" />
              <Assign DisplayName="Assign Last Row Number" sap:VirtualizedContainerService.HintSize="431,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[RowNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[(dt_UiPath.Rows.Count+1).ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Create Variable to Hold Entire Row" sap:VirtualizedContainerService.HintSize="431,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[TotalsRange]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">["A"+RowNumber.ToString+":"+"J"+RowNumber.ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="431,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_3" Range="[TotalsRange]" SheetName="[OrchestratorLicensesWorksheet]" />
              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Bold the Row" sap:VirtualizedContainerService.HintSize="431,132" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="b" KeyModifiers="Ctrl">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="17b3b70d-2a9e-4219-8dd4-2411c15ab79b">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SendHotkey.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:SendHotkey>
              <ui:ExcelGetCellColor Cell="B941" Color="[TotalsColor]" DisplayName="Get Cell Color" sap:VirtualizedContainerService.HintSize="431,59" sap2010:WorkflowViewState.IdRef="ExcelGetCellColor_3" SheetName="UiPath" />
              <ui:ExcelSetRangeColor Color="[TotalsColor]" DisplayName="Set the Totals Row to the Correct Color" sap:VirtualizedContainerService.HintSize="431,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_4" Range="[TotalsRange]" SheetName="[OrchestratorLicensesWorksheet]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelSetRangeColor>
              <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Black]" DisplayName="Set the Robots &amp; Services Column to the Correct Color" sap:VirtualizedContainerService.HintSize="431,185" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_5" Range="[RobotsAndServicesColumn]" SheetName="[OrchestratorLicensesWorksheet]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelSetRangeColor>
              <ui:ExcelReadRange AddHeaders="False" DataTable="[dt_LicenseTotals]" DisplayName="Read License Totals" sap:VirtualizedContainerService.HintSize="431,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_11" Range="B2:J2" SheetName="[OrchestratorLicensesWorksheet]" />
              <Sequence DisplayName="Update License Usage with License Totals" sap:VirtualizedContainerService.HintSize="431,2719" sap2010:WorkflowViewState.IdRef="Sequence_30">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;2&quot;]" DisplayName="Write Attended Robots Owned " sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="[LicenseUsageWorksheet]" Text="[dt_LicenseTotals(0)(0).ToString]" />
                <ui:ExcelWriteCell Cell="[LastColumnLetter + &quot;3&quot;]" DisplayName="Write Attended Robots Assigned" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="[LicenseUsageWorksheet]" Text="[AssignedLicensesTotalRow(1).ToString]" />
                <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;4&quot;]" DisplayName="Write Attended Licenses Billed" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_29" SheetName="[LicenseUsageWorksheet]" Text="[dt_AttendedLicenses.Rows.Count.ToString]" />
                <ui:ExcelAutoFillRange DisplayName="Fill Percentage of Attended Robots Filled" FillRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;5:&quot;+LastColumnLetter+&quot;5&quot;]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_4" SheetName="License Usage" SourceRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;5&quot;]" />
                <ui:ExcelAutoFillRange DisplayName="Fill Percentage Used of Licenses Owned" FillRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;6:&quot;+LastColumnLetter+&quot;6&quot;]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_5" SheetName="License Usage" SourceRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;6&quot;]" />
                <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;7&quot;]" DisplayName="Write Developer Licenses Owned " sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="[LicenseUsageWorksheet]" Text="[dt_LicenseTotals(0)(1).ToString]" />
                <ui:ExcelWriteCell Cell="[LastColumnLetter + &quot;8&quot;]" DisplayName="Write Developer Licenses Assigned" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="[LicenseUsageWorksheet]" Text="[AssignedLicensesTotalRow(2).ToString]" />
                <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;9&quot;]" DisplayName="Write Developer Licenses Billed" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_30" SheetName="[LicenseUsageWorksheet]" Text="[dt_DeveloperLicenses.Rows.Count.ToString]" />
                <ui:ExcelAutoFillRange DisplayName="Fill Percentage of Developer Licenses Billed" FillRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;10:&quot;+LastColumnLetter+&quot;10&quot;]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_6" SheetName="License Usage" SourceRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;10&quot;]" />
                <ui:ExcelAutoFillRange DisplayName="Fill Percentage Used Dev Licenses Billed" FillRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;11:&quot;+LastColumnLetter+&quot;11&quot;]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_7" SheetName="License Usage" SourceRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;11&quot;]" />
                <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;12&quot;]" DisplayName="Write Unattended Robots Owned " sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="[LicenseUsageWorksheet]" Text="[dt_LicenseTotals(0)(3).ToString]" />
                <ui:ExcelWriteCell Cell="[LastColumnLetter + &quot;13&quot;]" DisplayName="Write Unattended Robots Assigned" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_23" SheetName="[LicenseUsageWorksheet]" Text="[AssignedLicensesTotalRow(4).ToString]" />
                <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;14&quot;]" DisplayName="Write Unattended Licenses Billed" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_31" SheetName="[LicenseUsageWorksheet]" Text="[dt_UnattendedLicenses.Rows.Count.ToString]" />
                <ui:ExcelAutoFillRange DisplayName="Fill Percentage of Unattended Robots Billed" FillRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;15:&quot;+LastColumnLetter+&quot;15&quot;]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_8" SheetName="License Usage" SourceRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;15&quot;]" />
                <ui:ExcelAutoFillRange DisplayName="Fill Percentage Used of Unattended Robots" FillRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;16:&quot;+LastColumnLetter+&quot;16&quot;]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_9" SheetName="License Usage" SourceRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;16&quot;]" />
                <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;17&quot;]" DisplayName="Write Testing Robots Owned " sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_24" SheetName="[LicenseUsageWorksheet]" Text="[dt_LicenseTotals(0)(7).ToString]" />
                <ui:ExcelWriteCell Cell="[LastColumnLetter + &quot;18&quot;]" DisplayName="Write Testing Robots Assigned" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_25" SheetName="[LicenseUsageWorksheet]" Text="[AssignedLicensesTotalRow(8).ToString]" />
                <ui:ExcelWriteCell Cell="[LastColumnLetter+&quot;19&quot;]" DisplayName="Write Testing Licenses Billed" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_32" SheetName="[LicenseUsageWorksheet]" Text="[dt_TestingLicenses.Rows.Count.ToString]" />
                <ui:ExcelAutoFillRange DisplayName="Fill Percentage of Test Robots Billed" FillRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;20:&quot;+LastColumnLetter+&quot;20&quot;]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_10" SheetName="License Usage" SourceRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;20&quot;]" />
                <ui:ExcelAutoFillRange DisplayName="Fill Percent of Total Licenses Billed" FillRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;21:&quot;+LastColumnLetter+&quot;21&quot;]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_11" SheetName="License Usage" SourceRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;21&quot;]" />
                <ui:ExcelAutoFillRange DisplayName="Fill Percent Used of Testing Bots" FillRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;22:&quot;+LastColumnLetter+&quot;22&quot;]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_12" SheetName="License Usage" SourceRange="[UiPath.Excel.Helpers.ExcelUtilities.ConvertColumnIndexToColumnLetter(ActiveUsersRow.Count+1)+&quot;22&quot;]" />
              </Sequence>
            </Sequence>
            <Sequence DisplayName="Update BAS Service Consumers" sap:VirtualizedContainerService.HintSize="476,1580" sap2010:WorkflowViewState.IdRef="Sequence_47">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="BASServiceConsumersWorksheet">
                  <Variable.Default>
                    <Literal x:TypeArguments="x:String">BAS Service Consumers</Literal>
                  </Variable.Default>
                </Variable>
                <Variable x:TypeArguments="sd:DataTable" Name="dt_BoxAgencies" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="434,59" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_4" Range="A2:C100" SheetName="[BASServiceConsumersWorksheet]" />
              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="del" KeyModifiers="None" SpecialKey="True">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="4ce8ea6e-e017-4280-86ee-dbb6a06441f4">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
              <ui:FilterDataTable DataTable="[dt_Licenses]" DisplayName="Use Only Agencies" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="434,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_12" OutputDataTable="[dt_Licenses]" SelectColumnsMode="Keep">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:String">["_"]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                    <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:String">["Assigned Licenses"]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FilterDataTable>
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_Licenses]" DisplayName="Write UiPath Agencies" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="[BASServiceConsumersWorksheet]" StartingCell="A2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteRange>
              <ui:FilterDataTable DataTable="[dt_ePenCumulative]" DisplayName="Use Only Agency Codes" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_11" OutputDataTable="[dt_ePenCumulative]" SelectColumnsMode="Keep">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FilterDataTable>
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_ePenCumulative]" DisplayName="Write Cumulative" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="[BASServiceConsumersWorksheet]" StartingCell="B2" />
              <ui:ReadCsvFile DataTable="[dt_BoxAgencies]" Delimitator="Comma" DisplayName="Read CSV" FilePath="[in_AgenciesFile]" sap:VirtualizedContainerService.HintSize="434,153" sap2010:WorkflowViewState.IdRef="ReadCsvFile_5" />
              <ui:FilterDataTable DataTable="[dt_BoxAgencies]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="434,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_13" OutputDataTable="[dt_BoxAgencies]" SelectColumnsMode="Keep">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">["u_organization"]</InArgument>
                      </ui:FilterOperationArgument.Column>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <InArgument x:TypeArguments="x:String">["u_organization"]</InArgument>
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
              </ui:FilterDataTable>
              <ui:RemoveDuplicateRows DataTable="[dt_BoxAgencies]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="434,79" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_1" OutputDataTable="[dt_BoxAgencies]" />
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_BoxAgencies]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_6" SheetName="[BASServiceConsumersWorksheet]" StartingCell="C2" />
            </Sequence>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="476,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Message="[&quot;License Report update complete&quot;]" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>